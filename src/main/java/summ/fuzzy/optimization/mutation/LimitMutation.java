package summ.fuzzy.optimization.mutation;

import summ.fuzzy.optimization.functions.Function;

/**
 * @author Jovani Brasil
 * 
 * Limit mutation: a gene is replaced by a limit value of the gene. This mutation
 * reduces the diversity loss generated by some crossover operators, like simple 
 * mean crossover.  
 *
 */
public class LimitMutation extends MutationOperator {
	
	private Function function;
	
	public LimitMutation(Function function) {
		super();
		this.function = function;
	}
	
	/**
	 * Select a limit value.
	 * 
	 * @param rangeMin
	 * @param rangeMax
	 * @return
	 */
	public double limit(double rangeMin, double rangeMax) {
		if(rand.nextFloat() < 0.5) {
			return rangeMin;
		} else {
			return rangeMax;
		}
	}

	@Override
	public double getAleatoryFeasibleCoefficient(int index) {
		return limit(function.getRangeMin(index), function.getRangeMax(index));
	}
	
	@Override
	public String toString() {
		return "Limit mutation";
	}

	@Override
	public double getAleatoryFeasibleCoefficient(double min, double max) {
		return 0;
	}
	
}
